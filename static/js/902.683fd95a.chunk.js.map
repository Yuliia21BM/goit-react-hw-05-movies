{"version":3,"file":"static/js/902.683fd95a.chunk.js","mappings":"uOAGaA,EAAUC,EAAAA,GAAAA,GAAH,2jBA0BPC,GAAYD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,gJAQTG,EAAuBH,EAAAA,GAAAA,IAAH,sEAKpBI,EAAYJ,EAAAA,GAAAA,GAAH,mdAyBTK,EAAYL,EAAAA,GAAAA,KAAH,2d,SCxDTM,EAAY,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YAC1BC,GAAWC,EAAAA,EAAAA,MAGjB,OACE,SAACX,EAAD,CAAS,eAAcQ,EAAKI,GAA5B,UACE,UAACV,EAAD,CACEW,GAAE,UAAKJ,EAAW,iBAAaD,EAAKI,IAAOJ,EAAKI,IAChDE,MAAO,CAAEC,KAAML,GAFjB,WAIE,gBACEM,MAAM,OACNC,IAAKT,EAAKU,YAVC,kCAU0BV,EAAKU,YAAcC,EACxDC,IAAKZ,EAAKa,MAAQb,EAAKa,MAAQ,UAC/BC,QAAQ,UAEV,SAAClB,EAAD,WACE,SAACC,EAAD,UAAYG,EAAKa,MAAQb,EAAKa,MAAQ,qBAExC,SAACf,EAAD,UACGE,EAAKe,aAAef,EAAKe,aAAaC,MAAM,EAAG,GAAK,YAK9D,EClCYC,EAAUxB,EAAAA,GAAAA,GAAH,6HCCPyB,EAAY,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,OAAQlB,EAAkB,EAAlBA,YAClC,OACE,SAACgB,EAAD,UACGE,IAAW,GACVA,EAAOC,KAAI,SAAAC,GACT,OACE,SAACtB,EAAD,CAA0BC,KAAMqB,EAAOpB,YAAaA,GAApCoB,EAAMjB,GAEzB,KAED,sDAIP,C,mMCfKkB,EAAU,mCACVC,EAAW,+BAEV,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,yGAA8BC,EAA9B,+BAAqC,EAArC,kBAEoBC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,uCACqBD,EADrB,iBACqCG,IAHzD,cAEGE,EAFH,yBAMIA,EAAS3B,MANb,gCAQH4B,QAAQC,MAAM,2CARX,iFAYA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,4FAAuCN,EAAvC,+BAA8C,EAA9C,kBAEoBC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iCACeD,EADf,kBACgCS,EADhC,iBAC6CN,IAHjE,cAEGE,EAFH,yBAKIA,EAAS3B,MALb,gCAOH4B,QAAQC,MAAM,2CAPX,iFAWA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+B5B,GAA/B,gGAEoBsB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAnB,EADA,oBACckB,IAHlC,UAMqB,OAJlBK,EAFH,QAMUM,OANV,0EAUIN,EAAS3B,MAVb,gCAYH4B,QAAQC,MAAM,2CAZX,gFAgBA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAgC9B,GAAhC,gGAEoBsB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAnB,EADA,4BACsBkB,IAH1C,UAMqB,OAJlBK,EAFH,QAMUM,OANV,0EAUIN,EAAS3B,MAVb,gCAYH4B,QAAQC,MAAM,2CAZX,gFAgBA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAAkC/B,GAAlC,gGAEoBsB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAnB,EADA,4BACsBkB,IAH1C,UAMqB,OAJlBK,EAFH,QAMUM,OANV,0EAUIN,EAAS3B,MAVb,gCAYH4B,QAAQC,MAAM,2CAZX,gF,2IC1DMO,EAAa3C,EAAAA,GAAAA,KAAH,gUAeV4C,EAAc5C,EAAAA,GAAAA,MAAH,8NAYX6C,EAAe7C,EAAAA,GAAAA,OAAH,2R,SC1BZ8C,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1B,GAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAMA,OACE,UAACP,EAAD,CAAYI,SANW,SAAAI,GACvBA,EAAEC,iBACFL,EAASE,GACTC,EAAW,GACZ,EAEC,WACE,SAACN,EAAD,CACES,YAAY,qBACZC,MAAOL,EACPM,SAAU,SAAAJ,GAAC,OAAID,EAAWC,EAAEK,cAAcF,MAA/B,KAEb,SAACT,EAAD,CAAcY,KAAK,UAAUC,KAAK,SAAlC,sBAKL,E,SCpBYC,EAAY3D,EAAAA,GAAAA,IAAH,gUCmCtB,EA9BkB,WAAO,IAAD,EACtB,GAAwC4D,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAS,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAC/C,GAA8BhB,EAAAA,EAAAA,UAASe,GAAwB,IAA/D,eAAOd,EAAP,KAAgBC,EAAhB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOtB,EAAP,KAAeuC,EAAf,MAQAC,EAAAA,EAAAA,YAAU,WACHjB,GAAuB,KAAZA,IAChBZ,EAAAA,EAAAA,IAAkBY,GAASkB,MAAK,gBAAGC,EAAH,EAAGA,QAAH,OAAiBH,EAAUG,EAA3B,GACjC,GAAE,CAACnB,IAOJ,OACE,UAACU,EAAD,YACE,SAACb,EAAD,CAAWC,SAPU,SAAAsB,GAXC,IAAAjD,EAYnBiD,GAA6B,KAAfA,IACnBnB,EAAWmB,GAXXP,EAD6B,MADL1C,EAcNiD,GAbgB,CAAEjD,MAAAA,GAAU,CAAC,GAE/C8B,EAAW9B,GAYZ,KAIG,SAAC,IAAD,CAAWM,OAAQA,EAAQlB,aAAa,MAG7C,C","sources":["components/MovieItem/MovieItem.styled.jsx","components/MovieItem/MovieItem.jsx","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","fetchApi.js","components/SearchBar/SearchBar.styled.jsx","components/SearchBar/SearchBar.jsx","pages/MovieWrap/MovieWrap.styled.jsx","pages/MovieWrap/MovieWrap.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MovieLi = styled.li`\n  position: relative;\n  width: 100%;\n  cursor: pointer;\n\n  padding-bottom: 5px;\n  transition: box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  transform: scale(1);\n\n  @media screen and (min-width: 768px) {\n    flex-basis: calc((100% - 30px) / 2);\n  }\n\n  @media screen and (min-width: 1280px) {\n    flex-basis: calc((100% - 90px) / 4);\n  }\n\n  &:hover,\n  &:focus {\n    box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.75);\n    border-radius: 5px;\n    transform: scale(1.025);\n  }\n`;\n\nexport const MovieLink = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  justify-content: space-between;\n  text-decoration: none;\n`;\n\nexport const MovieCardDescription = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const CardTitle = styled.h2`\n  font-family: 'Roboto';\n  font-style: normal;\n  /* padding: 8px; */\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 16px;\n  text-transform: uppercase;\n  text-align: center;\n  color: #fff;\n  padding-left: 0px;\n  display: block;\n\n  @media screen and (min-width: 768px) {\n    padding-left: 0;\n  }\n\n  @media screen and (min-width: 1280px) {\n    font-weight: 500;\n\n    font-size: 18px;\n    /* line-height: 20px; */\n  }\n`;\n\nexport const MovieDate = styled.span`\n  position: absolute;\n  left: 5px;\n  top: 5px;\n  width: 45px;\n  max-height: 20px;\n  text-align: center;\n  text-transform: uppercase;\n  color: #ffffff;\n  background-color: #ff2d08;\n  border-radius: 5px;\n  margin-left: 8px;\n  padding: 1px 0;\n  font-size: 12px;\n  font-weight: 500;\n  line-height: 1.16;\n  display: flex;\n  justify-content: center;\n\n  @media screen and (min-width: 1280px) {\n    width: 40px;\n    font-size: 14px;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport defaultPoster from '../../images/default-poster.jpg';\n\nimport {\n  MovieLi,\n  MovieCardDescription,\n  CardTitle,\n  MovieDate,\n  MovieLink,\n} from './MovieItem.styled';\n\nexport const MovieItem = ({ data, isMoviePath }) => {\n  const location = useLocation();\n  const POSTER_URL = 'https://image.tmdb.org/t/p/w500';\n\n  return (\n    <MovieLi data-film-id={data.id}>\n      <MovieLink\n        to={`${isMoviePath ? `movies/${data.id}` : data.id}`}\n        state={{ from: location }}\n      >\n        <img\n          width=\"100%\"\n          src={data.poster_path ? POSTER_URL + data.poster_path : defaultPoster}\n          alt={data.title ? data.title : 'Unknown'}\n          loading=\"lazy\"\n        ></img>\n        <MovieCardDescription>\n          <CardTitle>{data.title ? data.title : 'Unknown title'}</CardTitle>\n        </MovieCardDescription>\n        <MovieDate>\n          {data.release_date ? data.release_date.slice(0, 4) : 'n/a'}\n        </MovieDate>\n      </MovieLink>\n    </MovieLi>\n  );\n};\n","import styled from 'styled-components';\n\nexport const MovieUl = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  list-style: none;\n  gap: 20px;\n  justify-content: center;\n`;\n","import { MovieItem } from '../../components/MovieItem/MovieItem';\nimport { MovieUl } from './MovieList.styled';\n\nexport const Movielist = ({ movies, isMoviePath }) => {\n  return (\n    <MovieUl>\n      {movies !== [] ? (\n        movies.map(movie => {\n          return (\n            <MovieItem key={movie.id} data={movie} isMoviePath={isMoviePath} />\n          );\n        })\n      ) : (\n        <div>Something went wrong :(</div>\n      )}\n    </MovieUl>\n  );\n};\n","import axios from 'axios';\n\nconst API_KEY = '8b3f9f93b217543bb23268b1f13b0854';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport async function getPopularFilm(page = 1) {\n  try {\n    const fetchAPI = await axios.get(\n      `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=${page}`\n    );\n\n    return fetchAPI.data;\n  } catch (error) {\n    console.error('Something is wrong with the search' + error);\n  }\n}\n\nexport async function searchMovieByName(text, page = 1) {\n  try {\n    const fetchAPI = await axios.get(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${text}&page=${page}`\n    );\n    return fetchAPI.data;\n  } catch (error) {\n    console.error('Something is wrong with the search' + error);\n  }\n}\n\nexport async function searchMovieById(id) {\n  try {\n    const fetchAPI = await axios.get(\n      `${BASE_URL}/movie/${id}?api_key=${API_KEY}`\n    );\n\n    if (fetchAPI.status !== 200) {\n      return;\n    }\n\n    return fetchAPI.data;\n  } catch (error) {\n    console.error('Something is wrong with the search' + error);\n  }\n}\n\nexport async function searchMovieCasts(id) {\n  try {\n    const fetchAPI = await axios.get(\n      `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`\n    );\n\n    if (fetchAPI.status !== 200) {\n      return;\n    }\n\n    return fetchAPI.data;\n  } catch (error) {\n    console.error('Something is wrong with the search' + error);\n  }\n}\n\nexport async function searchMovieReviews(id) {\n  try {\n    const fetchAPI = await axios.get(\n      `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`\n    );\n\n    if (fetchAPI.status !== 200) {\n      return;\n    }\n\n    return fetchAPI.data;\n  } catch (error) {\n    console.error('Something is wrong with the search' + error);\n  }\n}\n","import styled from 'styled-components';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  gap: 10px;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 20px;\n  @media screen and (min-width: 768px) {\n    transform: translateY(-80px);\n    margin-bottom: 0;\n  }\n  @media screen and (min-width: 1280px) {\n    transform: translateY(-90px);\n  }\n`;\n\nexport const SearchInput = styled.input`\n  width: 200px;\n  padding: 10px 5px;\n  border: 2px solid #fff;\n  border-radius: 2px;\n  background-color: #000;\n  color: #fff;\n  @media screen and (min-width: 768px) {\n    width: 300px;\n  }\n`;\n\nexport const SearchButton = styled.button`\n  padding: 10px 10px;\n  background-color: #fff;\n  color: #000;\n  border: 1px solid #000;\n  border-radius: 2px;\n\n  &:hover,\n  &:focus {\n    background-color: #000;\n    text-shadow: 3px 2px 2px #f01e0f;\n    color: #fff;\n    border-color: #fff;\n  }\n`;\n","import { useState } from 'react';\nimport { SearchInput, SearchForm, SearchButton } from './SearchBar.styled';\n\nexport const SearchBar = ({ onSubmit }) => {\n  const [request, setRequest] = useState('');\n  const handleSubmitForm = e => {\n    e.preventDefault();\n    onSubmit(request);\n    setRequest('');\n  };\n  return (\n    <SearchForm onSubmit={handleSubmitForm}>\n      <SearchInput\n        placeholder=\"Write some request\"\n        value={request}\n        onChange={e => setRequest(e.currentTarget.value)}\n      />\n      <SearchButton name=\"request\" type=\"submit\">\n        Search\n      </SearchButton>\n    </SearchForm>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  padding: 10px;\n  /* outline: red 1px solid; */\n  @media screen and (min-width: 480px) {\n    width: 480px;\n  }\n  @media screen and (min-width: 768px) {\n    width: 768px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 1280px;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { searchMovieByName } from '../../fetchApi';\nimport { SearchBar } from '../../components/SearchBar/SearchBar';\nimport { Movielist } from '../../components/MovieList/MovieList';\nimport { Container } from './MovieWrap.styled';\n\nconst MovieWrap = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const movieName = searchParams.get('title') ?? '';\n  const [request, setRequest] = useState(movieName ? movieName : '');\n  const [movies, setMovies] = useState([]);\n\n  const updateQueryString = title => {\n    const nextParams = title !== '' ? { title } : {};\n    setSearchParams(nextParams);\n    setRequest(title);\n  };\n\n  useEffect(() => {\n    if (!request || request === '') return;\n    searchMovieByName(request).then(({ results }) => setMovies(results));\n  }, [request]);\n\n  const handleSubmitForm = requestVal => {\n    if (!requestVal || requestVal === '') return;\n    setRequest(requestVal);\n    updateQueryString(requestVal);\n  };\n  return (\n    <Container>\n      <SearchBar onSubmit={handleSubmitForm} />\n      <Movielist movies={movies} isMoviePath={false} />\n    </Container>\n  );\n};\nexport default MovieWrap;\n"],"names":["MovieLi","styled","MovieLink","Link","MovieCardDescription","CardTitle","MovieDate","MovieItem","data","isMoviePath","location","useLocation","id","to","state","from","width","src","poster_path","defaultPoster","alt","title","loading","release_date","slice","MovieUl","Movielist","movies","map","movie","API_KEY","BASE_URL","getPopularFilm","page","axios","fetchAPI","console","error","searchMovieByName","text","searchMovieById","status","searchMovieCasts","searchMovieReviews","SearchForm","SearchInput","SearchButton","SearchBar","onSubmit","useState","request","setRequest","e","preventDefault","placeholder","value","onChange","currentTarget","name","type","Container","useSearchParams","searchParams","setSearchParams","movieName","get","setMovies","useEffect","then","results","requestVal"],"sourceRoot":""}