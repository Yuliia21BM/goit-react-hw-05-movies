{"version":3,"file":"static/js/291.256bdb57.chunk.js","mappings":"qQAEaA,EAAgBC,EAAAA,GAAAA,GAAH,+EAMbC,EAAaD,EAAAA,GAAAA,KAAH,2CAIVE,EAAaF,EAAAA,GAAAA,GAAH,mFAMVG,EAAoBH,EAAAA,GAAAA,EAAH,iE,SCqC9B,EA3CoB,WAClB,IAAQI,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACMC,GAAYC,EAAAA,EAAAA,UAYlB,OAVAC,EAAAA,EAAAA,YAAU,WACRH,GAAa,GACRN,IACLU,EAAAA,EAAAA,IAAmBV,GAAIW,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QACxBA,GAAWA,IAAY,IAAIR,EAAU,IAC1CA,EAAUQ,GACVL,EAAUM,QAAQC,eAAe,CAAEC,SAAU,WAC7CT,GAAa,EACd,GACF,GAAE,CAACN,KAEF,+BACE,SAACF,EAAD,CAAYkB,IAAKT,EAAjB,SACGF,GACC,SAAC,IAAD,IACoB,IAAlBF,EAAOc,OACTd,EAAOe,KAAI,SAAAC,GACT,OACE,2BACE,UAACxB,EAAD,qBACU,KACR,UAACE,EAAD,WAAasB,EAAKC,eAAeC,SAAjC,WAEF,uBAAIF,EAAKG,YALFH,EAAKnB,GAQjB,KAED,SAACD,EAAD,6DAOT,C,mGClDKwB,EAAmB3B,EAAAA,GAAAA,IAAH,gIAQT4B,EAAU,WACrB,OACE,SAACD,EAAD,WACE,SAAC,KAAD,CACEE,OAAQ,IACRC,MAAO,IACPC,OAAQ,EACRC,MAAM,UACNC,UAAU,wBACVC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,KAIhB,C,mMCxBKC,EAAU,mCACVC,EAAW,+BAEV,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,yGAA8BC,EAA9B,+BAAqC,EAArC,kBAEoBC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,uCACqBD,EADrB,iBACqCG,IAHzD,cAEGE,EAFH,yBAMIA,EAASC,MANb,gCAQHC,QAAQC,MAAM,2CARX,iFAYA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,4FAAuCP,EAAvC,+BAA8C,EAA9C,kBAEoBC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iCACeD,EADf,kBACgCU,EADhC,iBAC6CP,IAHjE,cAEGE,EAFH,yBAKIA,EAASC,MALb,gCAOHC,QAAQC,MAAM,2CAPX,iFAWA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+B5C,GAA/B,gGAEoBqC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAlC,EADA,oBACciC,IAHlC,UAMqB,OAJlBK,EAFH,QAMUO,OANV,0EAUIP,EAASC,MAVb,gCAYHC,QAAQC,MAAM,2CAZX,gFAgBA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAgC9C,GAAhC,gGAEoBqC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAlC,EADA,4BACsBiC,IAH1C,UAMqB,OAJlBK,EAFH,QAMUO,OANV,0EAUIP,EAASC,MAVb,gCAYHC,QAAQC,MAAM,2CAZX,gFAgBA,SAAe/B,EAAtB,+CAAO,OAAP,oBAAO,WAAkCV,GAAlC,gGAEoBqC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAlC,EADA,4BACsBiC,IAH1C,UAMqB,OAJlBK,EAFH,QAMUO,OANV,0EAUIP,EAASC,MAVb,gCAYHC,QAAQC,MAAM,2CAZX,gF","sources":["components/MovieReviews/MovieReviews.styled.jsx","components/MovieReviews/MovieReviews.jsx","components/Spenner-loader/Spinner-loader.jsx","fetchApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewerTitle = styled.h3`\n  display: flex;\n  gap: 3px;\n  margin-bottom: 15px;\n`;\n\nexport const ReviewName = styled.span`\n  color: #ef6210;\n`;\n\nexport const RewiewList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 25px;\n`;\n\nexport const RevievDefaultText = styled.p`\n  text-align: center;\n  padding: 20px;\n`;\n","import { useState, useEffect, useRef } from 'react';\nimport { searchMovieReviews } from '../../fetchApi';\nimport { useParams } from 'react-router-dom';\nimport { Spinner } from 'components/Spenner-loader/Spinner-loader';\n\nimport {\n  ReviewerTitle,\n  ReviewName,\n  RewiewList,\n  RevievDefaultText,\n} from './MovieReviews.styled';\n\nconst MovieReview = () => {\n  const { id } = useParams();\n  const [review, setReview] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const reviewRef = useRef();\n\n  useEffect(() => {\n    setIsLoading(true);\n    if (!id) return;\n    searchMovieReviews(id).then(({ results }) => {\n      if (!results || results === []) setReview([]);\n      setReview(results);\n      reviewRef.current.scrollIntoView({ behavior: 'smooth' });\n      setIsLoading(false);\n    });\n  }, [id]);\n  return (\n    <>\n      <RewiewList ref={reviewRef}>\n        {isLoading ? (\n          <Spinner />\n        ) : review.length !== 0 ? (\n          review.map(item => {\n            return (\n              <li key={item.id}>\n                <ReviewerTitle>\n                  Author:{' '}\n                  <ReviewName>{item.author_details.username} </ReviewName>\n                </ReviewerTitle>\n                <p>{item.content}</p>\n              </li>\n            );\n          })\n        ) : (\n          <RevievDefaultText>\n            Sorry, we don`t have reviews for thit movie\n          </RevievDefaultText>\n        )}\n      </RewiewList>\n    </>\n  );\n};\n\nexport default MovieReview;\n","import { BallTriangle } from 'react-loader-spinner';\nimport styled from 'styled-components';\n\nconst SpinnerCantainer = styled.div`\n  width: 100%;\n  padding: 50px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Spinner = () => {\n  return (\n    <SpinnerCantainer>\n      <BallTriangle\n        height={100}\n        width={100}\n        radius={5}\n        color=\"#ef5330\"\n        ariaLabel=\"ball-triangle-loading\"\n        wrapperClass={{}}\n        wrapperStyle=\"\"\n        visible={true}\n      />\n    </SpinnerCantainer>\n  );\n};\n","import axios from 'axios';\n\nconst API_KEY = '8b3f9f93b217543bb23268b1f13b0854';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport async function getPopularFilm(page = 1) {\n  try {\n    const fetchAPI = await axios.get(\n      `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=${page}`\n    );\n\n    return fetchAPI.data;\n  } catch (error) {\n    console.error('Something is wrong with the search' + error);\n  }\n}\n\nexport async function searchMovieByName(text, page = 1) {\n  try {\n    const fetchAPI = await axios.get(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${text}&page=${page}`\n    );\n    return fetchAPI.data;\n  } catch (error) {\n    console.error('Something is wrong with the search' + error);\n  }\n}\n\nexport async function searchMovieById(id) {\n  try {\n    const fetchAPI = await axios.get(\n      `${BASE_URL}/movie/${id}?api_key=${API_KEY}`\n    );\n\n    if (fetchAPI.status !== 200) {\n      return;\n    }\n\n    return fetchAPI.data;\n  } catch (error) {\n    console.error('Something is wrong with the search' + error);\n  }\n}\n\nexport async function searchMovieCasts(id) {\n  try {\n    const fetchAPI = await axios.get(\n      `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`\n    );\n\n    if (fetchAPI.status !== 200) {\n      return;\n    }\n\n    return fetchAPI.data;\n  } catch (error) {\n    console.error('Something is wrong with the search' + error);\n  }\n}\n\nexport async function searchMovieReviews(id) {\n  try {\n    const fetchAPI = await axios.get(\n      `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`\n    );\n\n    if (fetchAPI.status !== 200) {\n      return;\n    }\n\n    return fetchAPI.data;\n  } catch (error) {\n    console.error('Something is wrong with the search' + error);\n  }\n}\n"],"names":["ReviewerTitle","styled","ReviewName","RewiewList","RevievDefaultText","id","useParams","useState","review","setReview","isLoading","setIsLoading","reviewRef","useRef","useEffect","searchMovieReviews","then","results","current","scrollIntoView","behavior","ref","length","map","item","author_details","username","content","SpinnerCantainer","Spinner","height","width","radius","color","ariaLabel","wrapperClass","wrapperStyle","visible","API_KEY","BASE_URL","getPopularFilm","page","axios","fetchAPI","data","console","error","searchMovieByName","text","searchMovieById","status","searchMovieCasts"],"sourceRoot":""}