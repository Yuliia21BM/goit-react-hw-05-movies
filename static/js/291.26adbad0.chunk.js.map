{"version":3,"file":"static/js/291.26adbad0.chunk.js","mappings":"mPAEaA,EAAgBC,EAAAA,GAAAA,GAAH,+EAMbC,EAAaD,EAAAA,GAAAA,KAAH,2CAIVE,EAAaF,EAAAA,GAAAA,GAAH,mF,SC2BvB,EAjCoB,WAClB,IAAQG,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAQA,OAPAC,EAAAA,EAAAA,YAAU,WACHL,IACLM,EAAAA,EAAAA,IAAmBN,GAAIO,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QACxBA,GAAWA,IAAY,IAC5BJ,EAAUI,EACX,GACF,GAAE,CAACR,KAEF,8BACGG,IAAW,IAAOA,GAejB,wEAdA,SAACJ,EAAD,UACGI,EAAOM,KAAI,SAAAC,GACV,OACE,2BACE,UAACd,EAAD,qBACU,KACR,UAACE,EAAD,WAAaY,EAAKC,eAAeC,SAAjC,WAEF,uBAAIF,EAAKG,YALFH,EAAKV,GAQjB,OAOV,C,+LCnCKc,EAAU,mCACVC,EAAW,+BAEV,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,yGAA8BC,EAA9B,+BAAqC,EAArC,kBAEoBC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,uCACqBD,EADrB,iBACqCG,IAHzD,cAEGE,EAFH,yBAMIA,EAASC,MANb,gCAQHC,QAAQC,MAAM,2CARX,iFAYA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,4FAAuCP,EAAvC,+BAA8C,EAA9C,kBAEoBC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iCACeD,EADf,kBACgCU,EADhC,iBAC6CP,IAHjE,cAEGE,EAFH,yBAKIA,EAASC,MALb,gCAOHC,QAAQC,MAAM,2CAPX,iFAWA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+BzB,GAA/B,gGAEoBkB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAf,EADA,oBACcc,IAHlC,UAMqB,OAJlBK,EAFH,QAMUO,OANV,0EAUIP,EAASC,MAVb,gCAYHC,QAAQC,MAAM,2CAZX,gFAgBA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAgC3B,GAAhC,gGAEoBkB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAf,EADA,4BACsBc,IAH1C,UAMqB,OAJlBK,EAFH,QAMUO,OANV,0EAUIP,EAASC,MAVb,gCAYHC,QAAQC,MAAM,2CAZX,gFAgBA,SAAehB,EAAtB,+CAAO,OAAP,oBAAO,WAAkCN,GAAlC,gGAEoBkB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAf,EADA,4BACsBc,IAH1C,UAMqB,OAJlBK,EAFH,QAMUO,OANV,0EAUIP,EAASC,MAVb,gCAYHC,QAAQC,MAAM,2CAZX,gF","sources":["components/MovieReviews/MovieReviews.styled.jsx","components/MovieReviews/MovieReviews.jsx","fetchApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewerTitle = styled.h3`\n  display: flex;\n  gap: 3px;\n  margin-bottom: 15px;\n`;\n\nexport const ReviewName = styled.span`\n  color: #ef6210;\n`;\n\nexport const RewiewList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 25px;\n`;\n","import { useState, useEffect } from 'react';\nimport { searchMovieReviews } from '../../fetchApi';\nimport { useParams } from 'react-router-dom';\n\nimport { ReviewerTitle, ReviewName, RewiewList } from './MovieReviews.styled';\n\nconst MovieReview = () => {\n  const { id } = useParams();\n  const [review, setReview] = useState([]);\n  useEffect(() => {\n    if (!id) return;\n    searchMovieReviews(id).then(({ results }) => {\n      if (!results || results === []) return;\n      setReview(results);\n    });\n  }, [id]);\n  return (\n    <>\n      {review !== [] || !review ? (\n        <RewiewList>\n          {review.map(item => {\n            return (\n              <li key={item.id}>\n                <ReviewerTitle>\n                  Author:{' '}\n                  <ReviewName>{item.author_details.username} </ReviewName>\n                </ReviewerTitle>\n                <p>{item.content}</p>\n              </li>\n            );\n          })}\n        </RewiewList>\n      ) : (\n        <p>Sorry, we don`t have reviews for thit movie</p>\n      )}\n    </>\n  );\n};\n\nexport default MovieReview;\n","import axios from 'axios';\n\nconst API_KEY = '8b3f9f93b217543bb23268b1f13b0854';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport async function getPopularFilm(page = 1) {\n  try {\n    const fetchAPI = await axios.get(\n      `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=${page}`\n    );\n\n    return fetchAPI.data;\n  } catch (error) {\n    console.error('Something is wrong with the search' + error);\n  }\n}\n\nexport async function searchMovieByName(text, page = 1) {\n  try {\n    const fetchAPI = await axios.get(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${text}&page=${page}`\n    );\n    return fetchAPI.data;\n  } catch (error) {\n    console.error('Something is wrong with the search' + error);\n  }\n}\n\nexport async function searchMovieById(id) {\n  try {\n    const fetchAPI = await axios.get(\n      `${BASE_URL}/movie/${id}?api_key=${API_KEY}`\n    );\n\n    if (fetchAPI.status !== 200) {\n      return;\n    }\n\n    return fetchAPI.data;\n  } catch (error) {\n    console.error('Something is wrong with the search' + error);\n  }\n}\n\nexport async function searchMovieCasts(id) {\n  try {\n    const fetchAPI = await axios.get(\n      `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`\n    );\n\n    if (fetchAPI.status !== 200) {\n      return;\n    }\n\n    return fetchAPI.data;\n  } catch (error) {\n    console.error('Something is wrong with the search' + error);\n  }\n}\n\nexport async function searchMovieReviews(id) {\n  try {\n    const fetchAPI = await axios.get(\n      `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`\n    );\n\n    if (fetchAPI.status !== 200) {\n      return;\n    }\n\n    return fetchAPI.data;\n  } catch (error) {\n    console.error('Something is wrong with the search' + error);\n  }\n}\n"],"names":["ReviewerTitle","styled","ReviewName","RewiewList","id","useParams","useState","review","setReview","useEffect","searchMovieReviews","then","results","map","item","author_details","username","content","API_KEY","BASE_URL","getPopularFilm","page","axios","fetchAPI","data","console","error","searchMovieByName","text","searchMovieById","status","searchMovieCasts"],"sourceRoot":""}