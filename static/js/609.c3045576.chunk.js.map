{"version":3,"file":"static/js/609.c3045576.chunk.js","mappings":"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","sources":["fetchApi.js","pages/MovieInfo/MovieInfo.styled.jsx","components/BtnGoBack/BtnGoBack.styled.jsx","components/BtnGoBack/BtnGoBack.jsx","components/MovieDesription/MovieDesription.styled.jsx","components/MovieDesription/MovieDesription.jsx","pages/MovieInfo/MovieInfo.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '8b3f9f93b217543bb23268b1f13b0854';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport async function getPopularFilm(page = 1) {\n  try {\n    const fetchAPI = await axios.get(\n      `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=${page}`\n    );\n\n    return fetchAPI.data;\n  } catch (error) {\n    console.error('Something is wrong with the search' + error);\n  }\n}\n\nexport async function searchMovieByName(text, page = 1) {\n  try {\n    const fetchAPI = await axios.get(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${text}&page=${page}`\n    );\n    return fetchAPI.data;\n  } catch (error) {\n    console.error('Something is wrong with the search' + error);\n  }\n}\n\nexport async function searchMovieById(id) {\n  try {\n    const fetchAPI = await axios.get(\n      `${BASE_URL}/movie/${id}?api_key=${API_KEY}`\n    );\n\n    if (fetchAPI.status !== 200) {\n      return;\n    }\n\n    return fetchAPI.data;\n  } catch (error) {\n    console.error('Something is wrong with the search' + error);\n  }\n}\n\nexport async function searchMovieCasts(id) {\n  try {\n    const fetchAPI = await axios.get(\n      `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`\n    );\n\n    if (fetchAPI.status !== 200) {\n      return;\n    }\n\n    return fetchAPI.data;\n  } catch (error) {\n    console.error('Something is wrong with the search' + error);\n  }\n}\n\nexport async function searchMovieReviews(id) {\n  try {\n    const fetchAPI = await axios.get(\n      `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`\n    );\n\n    if (fetchAPI.status !== 200) {\n      return;\n    }\n\n    return fetchAPI.data;\n  } catch (error) {\n    console.error('Something is wrong with the search' + error);\n  }\n}\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  padding: 10px;\n  /* outline: red 1px solid; */\n  @media screen and (min-width: 480px) {\n    width: 480px;\n  }\n  @media screen and (min-width: 768px) {\n    width: 768px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 1280px;\n  }\n`;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: #fff;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n  margin-bottom: 20px;\n\n  :hover {\n    color: #ff0d00;\n  }\n`;\n","import { HiArrowLeft } from 'react-icons/hi';\nimport { StyledLink } from './BtnGoBack.styled';\n\nexport const BtnGoBack = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const DescriptionMovie = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  font-size: 22;\n  gap: 30px;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 20px;\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n  }\n  @media screen and (min-width: 1280px) {\n    align-items: start;\n    justify-content: start;\n  }\n`;\nexport const MovieImage = styled.img`\n  width: 350px;\n`;\nexport const InfoMovie = styled.div`\n  width: 80%;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  text-align: center;\n  margin-bottom: 30px;\n\n  @media screen and (min-width: 768px) {\n    width: 60%;\n    align-items: start;\n    text-align: start;\n  }\n  @media screen and (min-width: 1280px) {\n    margin-top: 30px;\n  }\n`;\n\nexport const MovieName = styled.h1`\n  font-size: 32px;\n  margin-bottom: 20px;\n`;\n\nexport const MovieAverage = styled.span`\n  position: absolute;\n  right: 10px;\n  top: 15px;\n  padding: 15px 10px;\n  color: ${({ children }) => {\n    const avarange = parseFloat(children);\n    if (avarange <= 100 && avarange >= 75) {\n      return '#fff';\n    }\n    if (avarange < 75 && avarange >= 45) {\n      return '#000';\n    } else {\n      return '#fff';\n    }\n  }};\n  font-weight: 600;\n  font-size: 18;\n  background-color: ${({ children }) => {\n    const avarange = parseFloat(children);\n    if (avarange <= 100 && avarange >= 75) {\n      return 'green';\n    }\n    if (avarange < 75 && avarange >= 45) {\n      return '#f5f526';\n    } else {\n      return 'red';\n    }\n  }};\n  border-radius: 50%;\n\n  @media screen and (min-width: 440px) {\n    right: 70px;\n  }\n  @media screen and (min-width: 768px) {\n    padding: 20px 15px;\n    right: 50px;\n    font-size: 28;\n  }\n  @media screen and (min-width: 1280px) {\n    right: 100px;\n  }\n`;\n\nexport const MovieAddition = styled.h3`\n  color: #ffffffae;\n  margin-bottom: 15px;\n`;\n\nexport const MovieAdditionalLict = styled.ul`\n  display: flex;\n  justify-content: center;\n  gap: 20px;\n  @media screen and (min-width: 768px) {\n    justify-content: start;\n  }\n`;\n\nexport const AdditionalItem = styled(NavLink)`\n  color: #fff;\n  transform: scale(1);\n  text-decoration: none;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    text-decoration 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n  }\n  &.active {\n    text-decoration: underline 3px solid #fff;\n  }\n`;\n","import { Suspense } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport {\n  DescriptionMovie,\n  MovieImage,\n  InfoMovie,\n  MovieName,\n  MovieAverage,\n  MovieAddition,\n  MovieAdditionalLict,\n  AdditionalItem,\n} from './MovieDesription.styled';\nimport defaultPoster from '../../images/default-poster.jpg';\n\nexport const MovieDescription = ({ data }) => {\n  const POSTER_URL = 'https://image.tmdb.org/t/p/w500';\n  return (\n    <>\n      <DescriptionMovie>\n        <MovieImage\n          src={data.poster_path ? POSTER_URL + data.poster_path : defaultPoster}\n          alt={data.title ? data.title : 'Unknown'}\n          loading=\"lazy\"\n        ></MovieImage>\n        <InfoMovie>\n          <MovieName>\n            {data.title ? data.title : 'Unknown title'} ({' '}\n            {data.release_date ? data.release_date.slice(0, 4) : 'n/a'})\n          </MovieName>\n          <MovieAverage>\n            {data.vote_average\n              ? data.vote_average.toFixed(1) * 10 + '%'\n              : 'n/a'}\n          </MovieAverage>\n          <div>\n            <MovieAddition>Genres: </MovieAddition>\n            <p>\n              {data.genres\n                ? data.genres.map(genre => genre.name).join(', ')\n                : 'no genres'}\n            </p>\n          </div>\n          <div>\n            <MovieAddition>Description:</MovieAddition>\n            <p>{data.overview ? data.overview : 'No description'}</p>\n          </div>\n          <MovieAddition>Additional information:</MovieAddition>\n          <MovieAdditionalLict>\n            <li>\n              <AdditionalItem to=\"cast\">Cast</AdditionalItem>\n            </li>\n            <li>\n              <AdditionalItem to=\"reviews\">Reviews</AdditionalItem>\n            </li>\n          </MovieAdditionalLict>\n        </InfoMovie>\n      </DescriptionMovie>\n      <Suspense fallback={<div>Loading subpage...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n","import { Container } from './MovieInfo.styled';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport { searchMovieById } from '../../fetchApi';\nimport { BtnGoBack } from '../../components/BtnGoBack/BtnGoBack';\nimport { MovieDescription } from '../../components/MovieDesription/MovieDesription';\n\nconst MovieInfo = () => {\n  const [movie, setMovie] = useState({});\n  const location = useLocation();\n  const { id } = useParams();\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  useEffect(() => {\n    if (!id) return;\n    getFilmById(id).then(data => setMovie(data));\n  }, [id]);\n\n  return (\n    <Container>\n      <BtnGoBack to={backLinkHref}>Back to movies</BtnGoBack>\n      {movie !== {} && <MovieDescription data={movie} />}\n    </Container>\n  );\n};\n\nconst getFilmById = async id => {\n  try {\n    const results = await searchMovieById(id);\n    return results;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport default MovieInfo;\n"],"names":["API_KEY","BASE_URL","getPopularFilm","page","axios","fetchAPI","data","console","error","searchMovieByName","text","searchMovieById","id","status","searchMovieCasts","searchMovieReviews","Container","styled","StyledLink","Link","BtnGoBack","to","children","size","DescriptionMovie","MovieImage","InfoMovie","MovieName","MovieAverage","avarange","parseFloat","MovieAddition","MovieAdditionalLict","AdditionalItem","NavLink","MovieDescription","src","poster_path","defaultPoster","alt","title","loading","release_date","slice","vote_average","toFixed","genres","map","genre","name","join","overview","Suspense","fallback","getFilmById","results","log","useState","movie","setMovie","location","useLocation","useParams","backLinkHref","state","from","useEffect","then"],"sourceRoot":""}